# HS Project 
# Descriptive statistics 

# Get the city of miami tracts only from the call data. 

miami_only <- HS_calls %>%
  filter(City == "City_of_Miami")
# The number of observations is verified. 

# Now lets see how many tracts we have and what they are.
# Condense the tracts
tracts <- miami_only %>%
  select(TRACTCE10)%>%
  group_by(TRACTCE10)%>%
  summarize(n = n())

# Next filter the tracts in the census data 
census_miami <- HS_census %>%
  filter(TRACTCE10 %in% tracts$TRACTCE10)

# There are two less tracts in the census data. I also need to make sure
# that all tracts have complete information available for use.
View(census_miami)
# There are def some fishy tracts but this is not my data call. 

# Re filter the tracts in the call data
miami_only2 <- miami_only %>%
  filter(TRACTCE10 %in% census_miami$TRACTCE10)
# nOW THER ARE 64322 OBS
# And 113 tracts

#okay lets do some data stuff
# break the calls down by year
View(miami_only2)

# My package includes a function that will seperate the year and the month
# so I can draw some statistics on it 
fix_year<- function(v){
  created_year<- unlist(lapply(v, function(v){
    if(nchar(v)==6){
      substring((v[which(nchar(v)==6)]),1,4)}
    else if(nchar(v)==5){
      substring((v[which(nchar(v)==5)]), 1,4)}
  }))
  print(created_year, quotes = FALSE)}
miami_only2$year <- fix_year(miami_only2$Created.Year.Month)

# Now we can break it down. 
# years and total calls
call_type <- miami_only2 %>% 
  select(year, Case.Owner)%>%
  group_by(year, Case.Owner)%>%
  summarise(n = n())
#Year
#1 2013  13256
#2 2014  13798
#3 2015  11459
#4 2016  12108
#5 2017  11865
#6 2018   1836

View(call_type)

#####################################################################################################################
# Okay now let's get the new census variables
install.packages("tidycensus")
library(tidycensus)

census_api_key("fb054896797b80e2bf77f1bab8b8fac0e4820c25")

acs_var <- c("DP03_0092E", "DP03_0065E","DP05_0003E", "DP05_0002E","DP05_0073E","DP05_0075E","DP05_0074E",
             "DP05_0072E","DP05_0066E","DP05_0077E","DP02_0003E","DP04_0045E","DP04_0047E", 
             "DP02_0093E","DP02_0094E","DP02_0095E","DP02_0063E","DP02_0061E", "DP02_0064E",
             "DP02_0065E","DP02_0062E","DP05_0007E","DP05_0008E","DP05_0021E",
             "DP03_0128E","DP03_0009E","DP03_0088E","DP02_0086E")

acs_var <- c("DP03_0092E","DP03_0065E","DP05_0003E","DP05_0002E","DP05_0073E","DP05_0075E","DP05_0074E",
             "DP05_0072E","DP05_0066E","DP05_0077E","DP02_0003E","DP04_0045E","DP04_0047E","DP02_0093E", 
             "DP02_0094E","DP02_0095E","DP02_0063E","DP02_0061E","DP02_0064E","DP02_0065E","DP02_0062E",
             "DP05_0007E","DP05_0008E","DP05_0021E","DP03_0005E","DP03_0088E",
             "DP02_0086E")

col_names <- c("DP03_0092E" = "med_income",
               "DP03_0065E" = "mean_income",
               "DP05_0003E" = "female",
               "DP05_0002E"= "male",
               "DP05_0073E" = "black",
               "DP05_0075E"= "asian",  
               "DP05_0074E"= "native",
               "DP05_0072E" = "white",
               "DP05_0066E" = "latino",
               "DP05_0077E"= "other",
               "DP02_0003E" = "house_with_child", 
               "DP04_0045E" = "occupied_house",
               "DP04_0047E" = "renter",   
               "DP02_0093E" = "foreign", 
               "DP02_0094E" = "naturalized", 
               "DP02_0095E" = "non_citizen",
               "DP02_0063E" = "associate", 
               "DP02_0061E" = "highschool",
               "DP02_0064E" = "bachelor",
               "DP02_0065E" = "graduate",
               "DP02_0062E" = "some_college",
               "DP05_0007E" = "year_15_to_19",
               "DP05_0008E" = "year_20_to_24", 
               "DP05_0021E" = "year_65_up",
               #"DP03_0128E" = "perc_under_poverty",
               "DP03_0005E" = "unemployment_rate",
               "DP03_0088E" = "per_cap_income",
               "DP02_0086E" = "tot_pop",
               "GEOID" = "tract",
               "NAME"= "county")
# Substitution: Estimate!!EMPLOYMENT STATUS!!Population 16 years and over!!In labor force!!Civilian labor force!!Unemployed


select_variable_sf1 <- c(land_area = "AREALAND",
                         water_area = "AREAWATR")

fl_acs <- get_acs(geography = "tract",
                  variables = acs_var, 
                  state = "FL",
                  year = 2016, 
                  output = "wide")

fl <- fl_acs %>% select(GEOID, NAME, acs_var) %>% filter(grepl("Miami-Dade", NAME))


library(plyr)
library(data.table)

census_data <- fl
View(census_data)
names(census_data)
library(plyr)
census_data <- rename(census_data, col_names)

census_data <- census_data %>% mutate(tract = substr(tract, start = 6, stop = 11))
View(census_data)

#remove the zeros
practice <- tail(census_data$tract, 25)
sub("^0+", "", practice)

census_data$TRACTCE10 <- sub("^0+", "", census_data$tract)

# Okay. Now we need to filter for the tracts in the census_miami data we gathered earlier. 
census_miami_raw <- census_data %>%
  select(-tract) %>%
  filter(TRACTCE10 %in% census_miami$TRACTCE10)

write.csv(census_miami_raw, "HS_census_raw.csv")
write.csv(census_miami, "HS_census_percents.csv")
write.csv(miami_only2, "HS_miami_calls.csv")

#######################################################################################################################################
# NORMALIZE
# Normalize the data. 

# What I can see from HS code is to normalize the data you want to
# 1) vi = the feature OR the variable 
# 2) pi = the pop ulation of the tract
# 3) you want to multiply these together 
# 4) then create a combined sum for the feature using all tracts 
# 5) then divide the answer found in #3 by the answer in #4 
# That will give you the normalized value

# Let's Go! But first I need to know which variables we are doing this for...
# I'm importing the hs_census_raw file as "raw" 
# HS codes beautigully so I am going to follow her code. She uses the function mutate and saves the total poulation as
# is own object value. The only problem I see if that, I'm not sure If I am advanced enough to create a function for this.We
# will try. 

# The function needs to 
# 1) grab the feature
# 2) multiply it by the population
# 3) make that a new variable
# 4) sum that new variable
# 5) divide the variable created in 3 by the one created in 4
# 6) and save that as a new variable in the data set
# 7) have it iterate over all the columns. 
# A good idea here would have been to use purr but honestl y I have no time

normalize <- function(dataset, feature, population, coltitle ="new_name"){
attach(dataset)
x <- feature * population
sum <- sum(x)
dataset <- mutate(dataset,
                  name = x/sum)
colnames(dataset)[which(colnames(dataset)== "name")]<- paste("norm", coltitle, sep = "_")
View(dataset)
}

norm2 <- function(dataset, feature, population, coltitle ="new_name"){
  x <- feature * population
  sum <- sum(as.numeric(x))
  dataset <- mutate(dataset,
                    name = x/sum)
  colnames(dataset)[which(colnames(dataset)== "name")]<- paste("norm", coltitle, sep = "_")
  View(dataset)
  print(dataset)
}


# Data cleaning
raw<- raw%>%
  mutate(college = associate + bachelor)
raw<- raw[raw$TRACTCE10 != "981000",]

raw2 <- raw[, c(3, 5:12, 20, 22, 27:30)]
raw <- raw2
rm(raw2)
safety <- raw
raw <- safety

#[1] "med_income"        "female"           
#[3] "male"              "black"            
#[5] "asian"             "native"           
#[7] "white"             "latino"           
#[9] "other"             "highschool"       
#[11] "graduate"          "unemployment_rate"
#[13] "per_cap_income"    "tot_pop"          
#[15] "TRACTCE10"

# Let's do this! 
raw2 <- norm2(raw2, raw$per_cap_income, raw$tot_pop, "per_cap_income")
write.csv(raw2, "HS_norm_census.csv")

# Now let's create a descriptive stats table




practice <- head(raw)
p <- normalize(practice, med_income, tot_pop, "income")
head(p)

#######################################################################################################################################
census<- census_percents[census_percents$TRACTCE10 != "981000",]
dfSummary(census)
dfSummary(raw2[, 16:28])

> dfSummary(census)
Data Frame Summary   
census     
N: 112   
---------------------------------------------------------------------------------------------------------------------------------------------------
  No   Variable                  Stats / Values                     Freqs (% of Valid)    Text Graph                               Valid    Missing  
---- ------------------------- ---------------------------------- --------------------- ---------------------------------------- -------- ---------
  1    X                         mean (sd) : 56.5 (32.48)           112 distinct values   : . . . . . . . . :                      112      0        
[integer]                 min < med < max :                                        : : : : : : : : : :                      (100%)   (0%)     
1 < 56.5 < 112                                           : : : : : : : : : :                                        
  IQR (CV) : 55.5 (0.57)                                   : : : : : : : : : :                                        
  : : : : : : : : : :                                        
  
  2    state                     mean (sd) : 12 (0)                 12 : 112 (100.0%)     IIIIIIIIIIIIIIII                         112      0        
[integer]                 min < med < max :                                                                                 (100%)   (0%)     
12 < 12 < 12                                                                                                        
IQR (CV) : 0 (0)                                                                                                    

3    county                    mean (sd) : 86 (0)                 86 : 112 (100.0%)     IIIIIIIIIIIIIIII                         112      0        
[integer]                 min < med < max :                                                                                 (100%)   (0%)     
86 < 86 < 86                                                                                                        
IQR (CV) : 0 (0)                                                                                                    

4    TRACTCE10                 mean (sd) : 8818.89 (45932.76)     112 distinct values   :                                        112      0        
[integer]                 min < med < max :                                        :                                        (100%)   (0%)     
1002 < 5152.5 < 490100                                   :                                                          
  IQR (CV) : 3900.5 (5.21)                                 :                                                          
  :                                                          
  
  5    tot_pop                   mean (sd) : 4596.34 (2039.88)      111 distinct values       :                                    112      0        
[integer]                 min < med < max :                                            : .                                  (100%)   (0%)     
1163 < 4322 < 11139                                      :   : :   .                                                
IQR (CV) : 2777.75 (0.44)                                : : : : : : .                                              
: : : : : : : .   .                                        

6    med_income                mean (sd) : 41068.52 (27578.09)    111 distinct values     :                                      112      0        
[integer]                 min < med < max :                                          :                                      (100%)   (0%)     
0 < 30118 < 156938                                         :                                                        
  IQR (CV) : 23193.75 (0.67)                                 :                                                        
  : : : : . .                                                

7    per_cap_income            mean (sd) : 26336.54 (20057.05)    112 distinct values   :                                        112      0        
[integer]                 min < med < max :                                        :                                        (100%)   (0%)     
7221 < 17269.5 < 111292                                  :                                                          
  IQR (CV) : 15040.75 (0.76)                               : :                                                        
  : : . . : .   .                                            

8    perc_under_poverty        mean (sd) : 26.63 (12.94)          101 distinct values       :                                    112      0        
[numeric]                 min < med < max :                                          . :                                    (100%)   (0%)     
0 < 25.6 < 63.2                                            : : :                                                    
  IQR (CV) : 19.5 (0.49)                                   . : : : :                                                  
  : : : : : .                                                

9    perc_unemployment_rate    mean (sd) : 9.91 (6.74)            91 distinct values      :                                      112      0        
[numeric]                 min < med < max :                                        : :                                      (100%)   (0%)     
0 < 8.7 < 35.1                                           : : :                                                      
  IQR (CV) : 8.1 (0.68)                                    : : : :                                                    
  : : : : : .                                                

10   perc_white                mean (sd) : 13.58 (15.96)          90 distinct values    :                                        112      0        
[numeric]                 min < med < max :                                        :                                        (100%)   (0%)     
0 < 5.3 < 60.1                                           :                                                          
  IQR (CV) : 17.88 (1.17)                                  :                                                          
  : : . : . .                                                

11   perc_aa                   mean (sd) : 19.78 (29.35)          75 distinct values    :                                        112      0        
[numeric]                 min < med < max :                                        :                                        (100%)   (0%)     
0 < 2.45 < 87.4                                          :                                                          
  IQR (CV) : 25.12 (1.48)                                  :                                                          
  : . .       . . .                                          

12   perc_hispanic             mean (sd) : 64.74 (29.81)          99 distinct values                      :                      112      0        
[numeric]                 min < med < max :                                                          :                      (100%)   (0%)     
9.4 < 72.5 < 99.2                                                        . :                                        
  IQR (CV) : 55.25 (0.46)                                  .   .     .     : :                                        
  : : : : : : . . : :                                        
  
  13   perc_other_race           mean (sd) : 1.9 (2.24)             48 distinct values    :                                        112      0        
[numeric]                 min < med < max :                                        :                                        (100%)   (0%)     
0 < 1.1 < 10.9                                           :                                                          
  IQR (CV) : 2.55 (1.18)                                   : . .                                                      
: : : . .   .                                              

14   perc_ed_high              mean (sd) : 28.92 (11.45)          96 distinct values                : .                          112      0        
[numeric]                 min < med < max :                                                    : :                          (100%)   (0%)     
3.6 < 31.75 < 47.5                                                   : : .                                          
IQR (CV) : 15.82 (0.4)                                   :   . .   : : : : .                                        
: : : : : : : : : :                                        
  
  15   perc_ed_college           mean (sd) : 16.29 (10.75)          97 distinct values      :                                      112      0        
[numeric]                 min < med < max :                                          :                                      (100%)   (0%)     
1.2 < 13.3 < 42.3                                          : .                                                      
IQR (CV) : 16.05 (0.66)                                    : : . .   .                                              
: : : : : : : : .                                          

16   perc_ed_att_col_deg       mean (sd) : 11.43 (12.36)          88 distinct values    :                                        112      0        
[numeric]                 min < med < max :                                        :                                        (100%)   (0%)     
0 < 5.7 < 41.9                                           :                                                          
  IQR (CV) : 12.38 (1.08)                                  : :                                                        
  : : : . .   . . .                                          

17   perc_other_ed             mean (sd) : 43.36 (12.69)          97 distinct values                  : :                        112      0        
[numeric]                 min < med < max :                                                  : : : :                        (100%)   (0%)     
12.6 < 46.6 < 62                                                   : : : : :                                        
  IQR (CV) : 16.43 (0.29)                                  :   .   : : : : : :                                        
  : : : : : : : : : :                                        
  
  18   perc_citizen              mean (sd) : 72.53 (13.04)          103 distinct values           : . .                            112      0        
[numeric]                 min < med < max :                                                : : : . . :                      (100%)   (0%)     
39.4 < 72.65 < 95                                              : : : : : : :                                        
  IQR (CV) : 20.2 (0.18)                                       : : : : : : : :                                        
  : . : : : : : : : :                                        
  
  19   perc_non_citizen          mean (sd) : 27.47 (13.04)          103 distinct values         . . :                              112      0        
[numeric]                 min < med < max :                                        : . . : : :                              (100%)   (0%)     
5 < 27.35 < 60.6                                         : : : : : : :                                              
  IQR (CV) : 20.2 (0.47)                                   : : : : : : : :                                            
  : : : : : : : : . :                                        
  ---------------------------------------------------------------------------------------------------------------------------------------------------
  > names(raw2)
[1] "med_income"             "female"                 "male"                   "black"                 
[5] "asian"                  "native"                 "white"                  "latino"                
[9] "other"                  "highschool"             "graduate"               "unemployment_rate"     
[13] "per_cap_income"         "tot_pop"                "TRACTCE10"              "norm_income"           
[17] "norm_female"            "norm_male"              "norm_black"             "norm_asian"            
[21] "norm_native"            "norm_white"             "norm_latino"            "norm_other"            
[25] "norm_highschool"        "norm_graduate"          "norm_unemployment_rate" "norm_per_cap_income"   
> dfSummary(raw2[, 16:28])
Data Frame Summary   
raw2     
N: 112   
------------------------------------------------------------------------------------------------------------------------------
  No   Variable                  Stats / Values             Freqs (% of Valid)    Text Graph                  Valid    Missing  
---- ------------------------- -------------------------- --------------------- --------------------------- -------- ---------
  1    norm_income               mean (sd) : 0.01 (0.01)    112 distinct values     :                         112      0        
[numeric]                 min < med < max :                                  :                         (100%)   (0%)     
0 < 0.01 < 0.04                                    :                                           
  IQR (CV) : 0.01 (0.62)                           : : .                                         
: : : . .                                     

2    norm_female               mean (sd) : 0.01 (0.01)    112 distinct values   . :                         112      0        
[numeric]                 min < med < max :                                : :                         (100%)   (0%)     
0 < 0.01 < 0.05                                  : :                                           
  IQR (CV) : 0.01 (0.88)                           : : . :                                       
  : : : : : .       .                           

3    norm_male                 mean (sd) : 0.01 (0.01)    112 distinct values   : :                         112      0        
[numeric]                 min < med < max :                                : :                         (100%)   (0%)     
0 < 0.01 < 0.04                                  : : .                                         
IQR (CV) : 0.01 (0.85)                           : : : .                                       
: : : : .   .                                 

4    norm_black                mean (sd) : 0.01 (0.02)    102 distinct values   :                           112      0        
[numeric]                 min < med < max :                                :                           (100%)   (0%)     
0 < 0 < 0.09                                     :                                             
  IQR (CV) : 0.01 (1.85)                           :                                             
  : . .                                         

5    norm_asian                mean (sd) : 0.01 (0.02)    61 distinct values    :                           112      0        
[numeric]                 min < med < max :                                :                           (100%)   (0%)     
0 < 0 < 0.14                                     :                                             
  IQR (CV) : 0.01 (2.13)                           :                                             
  : .                                           

6    norm_native               mean (sd) : 0.01 (0.03)    13 distinct values    :                           112      0        
[numeric]                 min < med < max :                                :                           (100%)   (0%)     
0 < 0 < 0.22                                     :                                             
  IQR (CV) : 0 (3.9)                               :                                             
  : .                                           

7    norm_white                mean (sd) : 0.01 (0.02)    112 distinct values   :                           112      0        
[numeric]                 min < med < max :                                :                           (100%)   (0%)     
0 < 0 < 0.12                                     :                                             
  IQR (CV) : 0.01 (1.73)                           :                                             
  : .                                           

8    norm_latino               mean (sd) : 0.01 (0.01)    112 distinct values   :                           112      0        
[numeric]                 min < med < max :                                :                           (100%)   (0%)     
0 < 0.01 < 0.06                                  :                                             
  IQR (CV) : 0.01 (1.13)                           : :                                           
  : : : . .                                     

9    norm_other                mean (sd) : 0.01 (0.02)    28 distinct values    :                           112      0        
[numeric]                 min < med < max :                                :                           (100%)   (0%)     
0 < 0 < 0.16                                     :                                             
  IQR (CV) : 0 (2.64)                              :                                             
  : .                                           

10   norm_highschool           mean (sd) : 0.01 (0.01)    112 distinct values   : :                         112      0        
[numeric]                 min < med < max :                                : :                         (100%)   (0%)     
0 < 0.01 < 0.05                                  : :                                           
  IQR (CV) : 0.01 (1)                              : : .                                         
: : : : :                                     
  
  11   norm_graduate             mean (sd) : 0.01 (0.01)    112 distinct values   :                           112      0        
[numeric]                 min < med < max :                                :                           (100%)   (0%)     
0 < 0 < 0.09                                     :                                             
  IQR (CV) : 0.01 (1.57)                           : .                                           
: : .                                         

12   norm_unemployment_rate    mean (sd) : 0.01 (0.01)    112 distinct values   :                           112      0        
[numeric]                 min < med < max :                                :                           (100%)   (0%)     
0 < 0.01 < 0.04                                  : :                                           
  IQR (CV) : 0.01 (0.93)                           : : :                                         
  : : : : . . .                                 

13   norm_per_cap_income       mean (sd) : 0.01 (0.01)    112 distinct values     :                         112      0        
[numeric]                 min < med < max :                                : :                         (100%)   (0%)     
0 < 0.01 < 0.04                                  : :                                           
  IQR (CV) : 0.01 (0.77)                           : : :                                         
  : : : . :                                     
  ------------------------------------------------------------------------------------------------------------------------------
HS_census_raw <- HS_census_raw %>%
  mutate(college = associate +bachelor)
summary(HS_census_raw$norm_college)
sd(HS_census_raw$norm_college)

safe <- HS_census_raw
HS_census_raw <- norm2(HS_census_raw, 
                           HS_census_raw$college, 
                           HS_census_raw$tot_pop, 
                           "college")
                           
#######################################################################################################################################
# Okay for the redo
safe <-calls
tracts <- unique(hs_calls$TRACTCE10)

#wE need to remove the leading zeros in the tracts
tracts <- sub("^0+", "", tracts)

calls <- calls %>%
  filter(TRACTCE10 %in% tracts)

# Re-do the stats on the years...
fix_year<- function(v){
  created_year<- unlist(lapply(v, function(v){
    if(nchar(v)==6){
      substring((v[which(nchar(v)==6)]),1,4)}
    else if(nchar(v)==5){
      substring((v[which(nchar(v)==5)]), 1,4)}
  }))
  print(created_year, quotes = FALSE)}

calls$year <- fix_year(calls$Created.Year.Month)

calls %>% 
  select(year)%>%
  group_by(year)%>%
  summarise(n = n())

#1 2013  13244
#2 2014  13792
#3 2015  11451
#4 2016  12086
#5 2017  11844
#6 2018   1835

issue <- calls %>% 
  select(year, Issue.Type)%>%
  group_by(year)%>%
  summarise(num = n_distinct(Issue.Type))

case <- calls %>% 
  select(year, Case.Owner)%>%
  group_by(year)%>%
  summarise(num = n_distinct(Case.Owner))

# Great this matches Hye Seon. Now I can do the same for the census data raw that I have. 
safe_census_raw <- raw
safe_census_perc <- percents

raw <- raw %>%
  mutate(college = associate + bachelor)%>%
  filter(TRACTCE10 %in% tracts)

percents <- percents %>% 
  filter(TRACTCE10 %in% tracts)

# Get the statistics on the percent data
dfSummary(percents)

# Re-Do the normalized values
norm2 <- function(dataset, feature, population, coltitle ="new_name"){
  x <- feature * population
  sum <- sum(as.numeric(x))
  dataset <- mutate(dataset,
                    name = x/sum)
  colnames(dataset)[which(colnames(dataset)== "name")]<- paste("norm", coltitle, sep = "_")
  View(dataset)
  print(dataset)
}

#[1] "med_income"        "female"           
#[3] "male"              "black"            
#[5] "asian"             "native"           
#[7] "white"             "latino"           
#[9] "other"             "highschool"       
#[11] "graduate"          "unemployment_rate"
#[13] "per_cap_income"    "tot_pop"          
#[15] "TRACTCE10"

raw <- norm2(raw, raw$unemployment_rate, raw$tot_pop, "unemployment")
View(raw)
write.csv(raw, "raw_census_wnorm.csv")

# Now get the stats
dfSummary(raw)
